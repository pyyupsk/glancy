{
  "compilerOptions": {
    // ======== Basic Configuration ========
    "target": "ESNext", // Use the latest JavaScript features (ESNext)
    "module": "ESNext", // Use the latest module system (ESNext)
    "moduleResolution": "node", // Resolve modules like Node.js does

    // ======== Strict Type Checking ========
    "strict": true, // Enable strict type checking for better safety
    "forceConsistentCasingInFileNames": true, // Ensure consistent casing in file names

    // ======== Compatibility and Interop ========
    "esModuleInterop": true, // Enable interoperability between CommonJS and ES Modules
    "allowSyntheticDefaultImports": true, // Allow synthetic default imports even if the module doesn't have a default export
    "resolveJsonModule": true, // Allow importing .json files as modules

    // ======== Optimization ========
    "skipLibCheck": true, // Skip type checking of declaration files to speed up builds
    "skipDefaultLibCheck": true, // Skip checking the default library files for faster compilation

    // ======== Output Configuration ========
    "noEmit": true, // Do not generate output files (only for type-checking)

    // ======== Isolation ========
    "isolatedModules": true, // Ensure each file can be independently transpiled (useful for ts-node or similar)

    // ======== Library and Type Definitions ========
    "lib": ["DOM", "ESNext"], // Include the latest ECMAScript and DOM types for client-side code
    "types": ["node", "jest"] // Add Node.js types if your project uses Node.js-specific features
  },

  // ======== File Inclusion/Exclusion ========
  "include": [
    "src/**/*" // Include all TypeScript files in the src folder
  ],

  "exclude": [
    "node_modules", // Exclude the node_modules folder
    "dist" // Exclude the dist folder (build output)
  ]
}
